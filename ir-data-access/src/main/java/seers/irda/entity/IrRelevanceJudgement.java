package seers.irda.entity;
// Generated Dec 9, 2015 11:27:45 AM by Hibernate Tools 4.3.1.Final


import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * IrRelevanceJudgement generated by hbm2java
 */
@Entity
@Table(name="ir_relevance_judgement"
    ,catalog="ir_issues"
    , uniqueConstraints = @UniqueConstraint(columnNames={"document_id", "query_id"}) 
)
public class IrRelevanceJudgement  implements java.io.Serializable {


     private IrRelevanceJudgementId id;
     private IrDocument irDocument;
     private IrQuery irQuery;

    public IrRelevanceJudgement() {
    }

    public IrRelevanceJudgement(IrRelevanceJudgementId id, IrDocument irDocument, IrQuery irQuery) {
       this.id = id;
       this.irDocument = irDocument;
       this.irQuery = irQuery;
    }
   
     @EmbeddedId

    
    @AttributeOverrides( {
        @AttributeOverride(name="documentId", column=@Column(name="document_id", nullable=false) ), 
        @AttributeOverride(name="queryId", column=@Column(name="query_id", nullable=false) ) } )
    public IrRelevanceJudgementId getId() {
        return this.id;
    }
    
    public void setId(IrRelevanceJudgementId id) {
        this.id = id;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="document_id", nullable=false, insertable=false, updatable=false)
    public IrDocument getIrDocument() {
        return this.irDocument;
    }
    
    public void setIrDocument(IrDocument irDocument) {
        this.irDocument = irDocument;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="query_id", nullable=false, insertable=false, updatable=false)
    public IrQuery getIrQuery() {
        return this.irQuery;
    }
    
    public void setIrQuery(IrQuery irQuery) {
        this.irQuery = irQuery;
    }




}


